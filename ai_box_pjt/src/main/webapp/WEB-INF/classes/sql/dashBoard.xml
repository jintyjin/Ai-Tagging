<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dashBoard">
	<select id="getDashBoard" resultType="java.util.Map" parameterType="java.util.Map">
		select i.item_json ->> 'event_name' as event, d.dev_title as device, count(*)
				from 
					data.itemEventJson as i
					join
						data.devinfo as d
						on d.dev_ch = (i.item_json ->> 'dev_channel')::integer		
		where to_date(i.item_json ->> 'event_time', 'YYYY-MM-DD') = to_date(#{time}, 'YYYY-MM-DD')
		<if test="event != null">
			and i.item_json ->> 'event_name' in
			<foreach collection="event" item="event" open="(" close=")" separator=",">
				#{event}
			</foreach>
		</if>
		<if test="device != null">
			and d.dev_title in
			<foreach collection="device" item="device" open="(" close=")" separator=",">
				#{device}
			</foreach>
		</if>
		group by to_date(i.item_json ->> 'event_time', 'YYYY-MM-DD'), d.dev_title, i.item_json ->> 'event_name'
		order by dev_title asc
	</select>
	
	<select id="mainCount" resultType="com.refa.ai.dto.CountDto" fetchSize="1000">
		select *
		from data.eventCount
		order by event_time desc;
	</select>
	
	<select id="selectBetweenDateCount" parameterType="com.refa.ai.dto.dashboard.StartEndDate" resultType="com.refa.ai.dto.dashboard.EventCountDto" fetchSize="1000">
		select lower(split_part(category_small, '_', 2)) as event, category_korean, coalesce(i.count, 0) as count
		from data.categoryAll as c
		left join (
			select lower(split_part(regexp_split_to_table(substring(tags, 2, length(tags) - 2), ', '),'_',2)) as event, count(*)
			from data.imageevent
			where 
				to_timestamp(event_time, 'YYYY-MM-DD')::timestamp between #{startDate}::timestamp and #{endDate}::timestamp
			group by lower(split_part(regexp_split_to_table(substring(tags, 2, length(tags) - 2), ', '),'_',2))
			order by event asc
		) as i
		on lower(split_part(c.category_small, '_', 2)) = i.event
		order by category_idx asc
	</select>
	
	<select id="selectBetweenDateEventCount" parameterType="com.refa.ai.dto.dashboard.StartEndDate" resultType="com.refa.ai.dto.dashboard.EventCountTimeDto" fetchSize="1000">
		SELECT time, ARRAY_TO_STRING(ARRAY_AGG(event),',') as event
		FROM (
			select i.time, i.event
			from data.categoryAll as c
			left join (
				select substring(event_time, 1, 10) as time, lower(split_part(regexp_split_to_table(substring(tags, 2, length(tags) - 2), ', '),'_',2)) || '_' || count(*) as event
				from data.imageevent
				where 
					to_timestamp(event_time, 'YYYY-MM-DD')::timestamp between #{startDate}::timestamp and #{endDate}::timestamp
				group by substring(event_time, 1, 10), lower(split_part(regexp_split_to_table(substring(tags, 2, length(tags) - 2), ', '),'_',2))
				order by time asc, event asc
			) as i
			on lower(split_part(c.category_small, '_', 2)) = split_part(i.event, '_', 1)
			where i.time is not null
			order by i.time asc, c.category_idx asc
		) a
		GROUP BY time;
	</select>
	
	<select id="selectReportingData" parameterType="com.refa.ai.dto.reporting.ReportingOptionDto" resultType="com.refa.ai.dto.reporting.ReportingDto" fetchSize="1000">
		SELECT ch, time, ARRAY_TO_STRING(ARRAY_AGG(event),',') as event
		FROM (
			select i.ch, i.time, i.event
			from data.categoryAll as c
			left join (
				select a.ch, a.time, a.event_name || '_' || count(*) as event
				from (
					select dev_ch::integer as ch, substring(event_time, 1, #{type}) as time, lower(split_part(regexp_split_to_table(substring(tags, 2, length(tags) - 2), ', '),'_',2)) as event_name
					from data.imageevent
					where dev_ch::integer in 
					<foreach collection="chList" item="ch" open="(" close=")" separator=",">
						#{ch}
					</foreach>
					and 
					<choose>
						<when test="type == 13">
							to_timestamp(event_time, 'YYYY-MM-DD')::timestamp between #{startDate}::timestamp and #{startDate}::timestamp
						</when>
						<otherwise>
							to_timestamp(event_time, 'YYYY-MM-DD')::timestamp between #{startDate}::timestamp and #{endDate}::timestamp
						</otherwise>
					</choose>
					group by ch, substring(event_time, 1, #{type}), lower(split_part(regexp_split_to_table(substring(tags, 2, length(tags) - 2), ', '),'_',2)), event_time
					order by ch asc, time asc, event_name asc
				) a
				where event_name = #{eventName}
				group by a.ch, a.time, a.event_name
				order by ch asc, time asc, event asc
			) as i
			on lower(split_part(c.category_small, '_', 2)) = split_part(i.event, '_', 1)
			where i.time is not null
			order by i.ch asc, i.time asc, c.category_idx asc
		) a
		GROUP BY ch, time;
	</select>
	
	<select id="selectDeviceChAndTitle" resultType="com.refa.ai.dto.dashboard.ReportDeviceChAndTitle" fetchSize="1000">
		select dev_ch as ch, dev_title as title
		from data.devinfo
		order by dev_ch asc;
	</select>
	
</mapper>
